<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第三篇文章</title>
      <link href="/2025/01/16/%E7%AC%AC%E4%B8%89%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2025/01/16/%E7%AC%AC%E4%B8%89%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="涅普高校-密码学"><a href="#涅普高校-密码学" class="headerlink" title="涅普高校-密码学"></a>涅普高校-密码学</h1><h2 id="2月5日：RSA加密与攻击"><a href="#2月5日：RSA加密与攻击" class="headerlink" title="2月5日：RSA加密与攻击"></a>2月5日：RSA加密与攻击</h2><p>课件和脚本：<a href="https://am473ur.lanzous.com/iXRGwldkj7a">https://am473ur.lanzous.com/iXRGwldkj7a</a></p><p>整数分解：<a href="https://www.alpertron.com.ar/ECM.HTM">https://www.alpertron.com.ar/ECM.HTM</a></p><p>整数因数查询：<a href="http://www.factordb.com/index.php">http://www.factordb.com/index.php</a></p><h3 id="easyRSA"><a href="#easyRSA" class="headerlink" title="easyRSA"></a>easyRSA</h3><p>下载地址 1：<a href="https://am473ur.lanzous.com/i95Qslccy6f">https://am473ur.lanzous.com/i95Qslccy6f</a></p><p>下载地址 2：<a href="https://nep.am473ur.com/easyRSA_task.zip">https://nep.am473ur.com/easyRSA_task.zip</a></p><h3 id="pycryptodome"><a href="#pycryptodome" class="headerlink" title="pycryptodome"></a>pycryptodome</h3><p><a href="https://pypi.org/project/pycryptodome/">https://pypi.org/project/pycryptodome/</a></p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pycryptodome` 或 `python3 –m pip install pycryptodome</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p><code>import Crypto</code> （注意区分大小写，运行没有报错说明已经正常安装）</p><h3 id="gmpy2"><a href="#gmpy2" class="headerlink" title="gmpy2"></a>gmpy2</h3><p><a href="https://pypi.org/project/gmpy2/">https://pypi.org/project/gmpy2/</a></p><h4 id="Windows使用whl文件安装gmpy2"><a href="#Windows使用whl文件安装gmpy2" class="headerlink" title="Windows使用whl文件安装gmpy2"></a>Windows使用whl文件安装gmpy2</h4><ol><li>从下面这些链接中找到适合自己系统版本&#x2F;Python版本的gmpy2的whl文件：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.lfd.uci.edu/~gohlke/pythonlibs/#gmpy</span><br><span class="line">https://pypi.org/project/gmpy2/#files</span><br><span class="line">https://github.com/aleaxit/gmpy/releases/tag/gmpy2-2.1.0a1</span><br></pre></td></tr></table></figure><ol><li>在命令行进入.whl文件所在目录</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install xxxxx.whl</span><br></pre></td></tr></table></figure><h4 id="Linux安装依赖"><a href="#Linux安装依赖" class="headerlink" title="Linux安装依赖"></a>Linux安装依赖</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libgmp-dev</span><br><span class="line">sudo apt-get install libmpfr-dev</span><br><span class="line">sudo apt-get install libmpc-dev</span><br></pre></td></tr></table></figure><h3 id="SageMath"><a href="#SageMath" class="headerlink" title="SageMath"></a>SageMath</h3><p>下载链接：<a href="https://www.sagemath.org/download.html">https://www.sagemath.org/download.html</a></p><p>觉得不好找可以从下面这些链接下载：（贴心</p><h4 id="Windows："><a href="#Windows：" class="headerlink" title="Windows："></a>Windows：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://mirrors.ustc.edu.cn/sagemath/win/SageMath-9.0-Installer-v0.6.0.exe</span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/sagemath/win/SageMath-9.0-Installer-v0.6.0.exe</span><br><span class="line">http://mirror.hust.edu.cn/sagemath/win/SageMath-9.0-Installer-v0.6.0.exe</span><br></pre></td></tr></table></figure><h4 id="MacOS："><a href="#MacOS：" class="headerlink" title="MacOS："></a>MacOS：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http://mirrors.ustc.edu.cn/sagemath/osx/intel/sage-9.0-OSX_10.15.2-x86_64.app.dmg</span><br><span class="line">http://mirrors.ustc.edu.cn/sagemath/osx/intel/sage-9.0-OSX_10.11.6-x86_64.app.dmg</span><br><span class="line"></span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/sagemath/osx/intel/sage-9.0-OSX_10.15.2-x86_64.app.dmg</span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/sagemath/osx/intel/sage-9.0-OSX_10.11.6-x86_64.app.dmg</span><br><span class="line"></span><br><span class="line">http://mirror.hust.edu.cn/sagemath/osx/intel/sage-9.0-OSX_10.15.2-x86_64.app.dmg</span><br><span class="line">http://mirror.hust.edu.cn/sagemath/osx/intel/sage-9.0-OSX_10.11.6-x86_64.app.dmg</span><br></pre></td></tr></table></figure><hr><h2 id="2月4日：古典密码学介绍"><a href="#2月4日：古典密码学介绍" class="headerlink" title="2月4日：古典密码学介绍"></a>2月4日：古典密码学介绍</h2><p>PPT及脚本：<a href="https://am473ur.lanzous.com/iBJPvlc07pa">https://am473ur.lanzous.com/iBJPvlc07pa</a></p><p>单表替代加密在线破解网站：<a href="https://quipqiup.com/">https://quipqiup.com/</a></p><p>Vigenere加密在线破解网站：<a href="https://www.guballa.de/vigenere-solver">https://www.guballa.de/vigenere-solver</a></p><h3 id="Python3"><a href="#Python3" class="headerlink" title="Python3"></a>Python3</h3><p><a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a></p><h4 id="pip缺失"><a href="#pip缺失" class="headerlink" title="pip缺失"></a>pip缺失</h4><p>下载 <a href="https://am473ur.lanzous.com/ivUE1laqvra">get-pip.py</a></p><p>终端输入 :</p><blockquote><p>python get-pip.py 或 python3 get-pip.py</p></blockquote><h4 id="更换国内镜像源"><a href="#更换国内镜像源" class="headerlink" title="更换国内镜像源"></a>更换国内镜像源</h4><h5 id="镜像地址："><a href="#镜像地址：" class="headerlink" title="镜像地址："></a>镜像地址：</h5><p>清华大学：<a href="https://pypi.tuna.tsinghua.edu.cn/simple/">https://pypi.tuna.tsinghua.edu.cn/simple/</a></p><p>阿里云：<a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a></p><p>中国科技大学：<a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a></p><p>豆瓣：<a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a></p><h5 id="单次下载："><a href="#单次下载：" class="headerlink" title="单次下载："></a>单次下载：</h5><blockquote><p>pip install –i <a href="https://pypi.tuna.tsinghua.edu.cn/simple/">https://pypi.tuna.tsinghua.edu.cn/simple/</a></p></blockquote><h5 id="更换默认源"><a href="#更换默认源" class="headerlink" title="更换默认源:"></a>更换默认源:</h5><blockquote><p>pip config set global.index-url <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p></blockquote><h5 id="通过更改文件-更换默认源："><a href="#通过更改文件-更换默认源：" class="headerlink" title="通过更改文件 更换默认源："></a>通过更改文件 更换默认源：</h5><p><strong>Windows:</strong> </p><p>在user目录中创建一个pip目录，如：C:\Users\xx\pip，新建文件pip.ini，内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p><strong>Linux:</strong> </p><p>修改 ~&#x2F;.pip&#x2F;pip.conf (没有就创建一个)， 内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><h3 id="Affine-task"><a href="#Affine-task" class="headerlink" title="Affine_task"></a>Affine_task</h3><p>下载地址 1：<a href="https://am473ur.lanzous.com/iE61clar2wh">https://am473ur.lanzous.com/iE61clar2wh</a></p><p>下载地址 2：<a href="https://nep.am473ur.com/Affine_task.zip">https://nep.am473ur.com/Affine_task.zip</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第二篇文章</title>
      <link href="/2025/01/16/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2025/01/16/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="LED灯"><a href="#LED灯" class="headerlink" title="LED灯"></a>LED灯</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">LED_Init();</span><br><span class="line">delay_init();</span><br><span class="line">LED1 = LED2 = LED3 = LED4 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">LED1 = LED2 = <span class="number">0</span>;</span><br><span class="line">LED3 = LED4 = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> t = <span class="number">30000</span>;</span><br><span class="line"><span class="keyword">while</span>(t--) delay_ms(<span class="number">1000</span>);</span><br><span class="line">LED1 = LED2 = <span class="number">1</span>;</span><br><span class="line">LED3 = LED4 = <span class="number">0</span>;</span><br><span class="line">t = <span class="number">30000</span>;</span><br><span class="line"><span class="keyword">while</span>(t--) delay_ms(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// led.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __LED_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __LED_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED1 PBout(8)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED2 PBout(9)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED3 PBout(10)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED4 PBout(11)</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//led.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE); </span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_All;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_Init(GPIOB, &amp;GPIO_InitStructure); </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="数码管-按键中断"><a href="#数码管-按键中断" class="headerlink" title="数码管 + 按键中断"></a>数码管 + 按键中断</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line"></span><br><span class="line">Key_Init();</span><br><span class="line">Smg_Init();</span><br><span class="line"></span><br><span class="line">GPIO_Write(GPIOB,~(<span class="number">0x20</span>&gt;&gt;<span class="number">0</span>));</span><br><span class="line">GPIO_Write(GPIOC,<span class="number">0x3f</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//smg.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Smg_Init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB | RCC_APB2Periph_GPIOC, ENABLE); </span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_All;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_Init(GPIOB, &amp;GPIO_InitStructure); </span><br><span class="line">GPIO_Init(GPIOC, &amp;GPIO_InitStructure); </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// key.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> table[] = &#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>&#125;;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> num;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Key_Init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE); </span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_All;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure); </span><br><span class="line"></span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource4);</span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource5);</span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource6);</span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource7);</span><br><span class="line"></span><br><span class="line">EXTI_InitTypeDef EXTI_InitStructure;</span><br><span class="line">EXTI_InitStructure.EXTI_Line = EXTI_Line4|EXTI_Line5|EXTI_Line6|EXTI_Line7;</span><br><span class="line">EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;</span><br><span class="line">EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;</span><br><span class="line">EXTI_InitStructure.EXTI_LineCmd = ENABLE;</span><br><span class="line">EXTI_Init(&amp;EXTI_InitStructure);</span><br><span class="line"></span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = EXTI4_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = EXTI9_5_IRQn;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI4_IRQHandler</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_Write(GPIOB,~(<span class="number">0x20</span>&gt;&gt;<span class="number">0</span>));</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI9_5_IRQHandler</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(EXTI_GetFlagStatus(EXTI_Line5))</span><br><span class="line">&#123;</span><br><span class="line">GPIO_Write(GPIOB,~(<span class="number">0x20</span>&gt;&gt;<span class="number">1</span>));</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line5);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(EXTI_GetFlagStatus(EXTI_Line6))</span><br><span class="line">&#123;</span><br><span class="line">GPIO_Write(GPIOB,~(<span class="number">0x20</span>&gt;&gt;<span class="number">2</span>));</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line6);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(EXTI_GetFlagStatus(EXTI_Line7))</span><br><span class="line">&#123;</span><br><span class="line">num ++;</span><br><span class="line">GPIO_Write(GPIOC,table[num%<span class="number">10</span>]);</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line7);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;timer.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line"></span><br><span class="line">delay_init();</span><br><span class="line">led_init();</span><br><span class="line">TIM1_init(<span class="number">500</span><span class="number">-1</span>,<span class="number">7200</span><span class="number">-1</span>);</span><br><span class="line">TIM2_init(<span class="number">1000</span><span class="number">-1</span>,<span class="number">7200</span><span class="number">-1</span>);</span><br><span class="line">LED1 = LED2 = LED3 = LED4 = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// timer.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;timer.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM1_init</span><span class="params">(u16 arr,u16 psc)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure; </span><br><span class="line">TIM_TimeBaseStructure.TIM_Period = arr; </span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler = psc; </span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; </span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; </span><br><span class="line">TIM_TimeBaseInit(TIM2, &amp; TIM_TimeBaseStructure); </span><br><span class="line"></span><br><span class="line">TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);</span><br><span class="line"></span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn; </span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>; </span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">2</span>; </span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; </span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure); </span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_init</span><span class="params">(u16 arr,u16 psc)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);</span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure; </span><br><span class="line">TIM_TimeBaseStructure.TIM_Period = arr; </span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler = psc; </span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; </span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; </span><br><span class="line">TIM_TimeBaseInit(TIM3, &amp; TIM_TimeBaseStructure); </span><br><span class="line"></span><br><span class="line">TIM_ITConfig(TIM3,TIM_IT_Update,ENABLE);</span><br><span class="line"></span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn; </span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>; </span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">2</span>; </span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; </span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure); </span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM3,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">LED1 = ~LED1;</span><br><span class="line">TIM_ClearFlag(TIM2,TIM_IT_Update);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_IRQHandler</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">LED2 = ~LED2;</span><br><span class="line">TIM_ClearFlag(TIM3,TIM_IT_Update);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="PWM"><a href="#PWM" class="headerlink" title="PWM"></a>PWM</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;motor.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;timer.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> CMP = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line"></span><br><span class="line">motor_init();</span><br><span class="line"></span><br><span class="line">timer_init(<span class="number">500</span><span class="number">-1</span>,<span class="number">7200</span><span class="number">-1</span>);</span><br><span class="line">TIM_SetCompare1(TIM1,CMP<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">key_init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//motor.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MOTOR_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MOTOR_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Motor1 PBout(13)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Motor2 PBout(14)</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">motor_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//motor.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;motor.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">motor_init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure; </span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_All; </span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; </span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; </span><br><span class="line">GPIO_Init(GPIOB, &amp;GPIO_InitStructure); </span><br><span class="line"></span><br><span class="line">Motor1 = <span class="number">1</span>;</span><br><span class="line">Motor2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//key.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;motor.h&quot;</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> CMP;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">key_init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC,ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure; </span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_All; </span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; </span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING; </span><br><span class="line">GPIO_Init(GPIOC, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOC, GPIO_PinSource0);</span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOC, GPIO_PinSource1);</span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOC, GPIO_PinSource2);</span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOC, GPIO_PinSource3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EXTI_InitTypeDef EXTI_InitStructure; </span><br><span class="line">EXTI_InitStructure.EXTI_Line = EXTI_Line0 | EXTI_Line1 | EXTI_Line2 | EXTI_Line3; </span><br><span class="line">EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt; </span><br><span class="line">EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling; </span><br><span class="line">EXTI_InitStructure.EXTI_LineCmd = ENABLE; </span><br><span class="line">EXTI_Init(&amp;EXTI_InitStructure); </span><br><span class="line"></span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure; </span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn; </span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>; </span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">2</span>; </span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; </span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure); </span><br><span class="line"></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = EXTI1_IRQn; </span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure); </span><br><span class="line"></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = EXTI2_IRQn; </span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure); </span><br><span class="line"></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = EXTI3_IRQn; </span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure); </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI0_IRQHandler</span><span class="params">()</span>&#123;</span><br><span class="line">Motor1 = <span class="number">1</span>;</span><br><span class="line">Motor2 = <span class="number">0</span>;</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI1_IRQHandler</span><span class="params">()</span>&#123;</span><br><span class="line">Motor1 = <span class="number">0</span>;</span><br><span class="line">Motor2 = <span class="number">1</span>;</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI2_IRQHandler</span><span class="params">()</span>&#123;</span><br><span class="line">CMP += <span class="number">100</span>;</span><br><span class="line">CMP = CMP &gt; <span class="number">500</span> ? <span class="number">500</span> : CMP;</span><br><span class="line">TIM_SetCompare1(TIM1,CMP<span class="number">-1</span>);</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI3_IRQHandler</span><span class="params">()</span>&#123;</span><br><span class="line">CMP -= <span class="number">100</span>;</span><br><span class="line">CMP = CMP &lt; <span class="number">1</span> ? <span class="number">1</span> : CMP;</span><br><span class="line">TIM_SetCompare1(TIM1,CMP<span class="number">-1</span>);</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//timer.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;timer.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">timer_init</span><span class="params">(u16 arr,u16 psc)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1,ENABLE);</span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;</span><br><span class="line">TIM_TimeBaseStructure.TIM_Period = arr;</span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler = psc;</span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;</span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;</span><br><span class="line">TIM_TimeBaseInit(TIM1,&amp;TIM_TimeBaseStructure);</span><br><span class="line"></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;</span><br><span class="line">TIM_OCInitStructure.TIM_Pulse = <span class="number">250</span>;</span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;</span><br><span class="line">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;</span><br><span class="line">TIM_OC1Init(TIM1,&amp;TIM_OCInitStructure);</span><br><span class="line"></span><br><span class="line">TIM_OC1PreloadConfig(TIM1,TIM_OCPreload_Enable);</span><br><span class="line">TIM_CtrlPWMOutputs(TIM1,ENABLE);</span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM1,ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="串口输出"><a href="#串口输出" class="headerlink" title="串口输出"></a>串口输出</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart1.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bsp_clkconfig.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  </span><br><span class="line">HSE_SetSysClock(RCC_PLLMul_7);</span><br><span class="line">delay_init();</span><br><span class="line">usart1_init(<span class="number">9600</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">usart1_sendString(<span class="string">&quot;221305030\r\n&quot;</span>);</span><br><span class="line">delay_ms(<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// usart1.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart1.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">usart1_init</span><span class="params">(u32 bound)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_AFIO |</span><br><span class="line">RCC_APB2Periph_USART1 , ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure); </span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure); </span><br><span class="line"></span><br><span class="line">USART_InitTypeDef USART_InitStructure;</span><br><span class="line">USART_InitStructure.USART_BaudRate = bound;</span><br><span class="line">USART_InitStructure.USART_WordLength = USART_WordLength_8b;</span><br><span class="line">USART_InitStructure.USART_StopBits = USART_StopBits_1;</span><br><span class="line">USART_InitStructure.USART_Parity = USART_Parity_No;</span><br><span class="line">USART_InitStructure.USART_HardwareFlowControl =</span><br><span class="line">USART_HardwareFlowControl_None;</span><br><span class="line">USART_InitStructure.USART_Mode = USART_Mode_Tx | USART_Mode_Rx;</span><br><span class="line">USART_Init(USART1, &amp;USART_InitStructure); </span><br><span class="line"></span><br><span class="line">USART_Cmd(USART1,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">usart1_sendChar</span><span class="params">(<span class="type">char</span> ch)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(USART_GetFlagStatus(USART1,USART_FLAG_TC)==<span class="number">0</span>) &#123;;&#125;</span><br><span class="line">USART_SendData(USART1,ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">usart1_sendString</span><span class="params">(<span class="type">char</span> ch[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;ch[i];i++)&#123;</span><br><span class="line">usart1_sendChar(ch[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="ADC"><a href="#ADC" class="headerlink" title="ADC"></a>ADC</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;adc.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">u16 adc_val;</span><br><span class="line">delay_init();</span><br><span class="line">adcInit();</span><br><span class="line">LCD_Init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">adc_val = get_ADC1_Avg(ADC_Channel_1,<span class="number">5</span>);</span><br><span class="line">Draw_number(adc_val,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">delay_ms(<span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// adc.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;adc.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">adcInit</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_ADC1,ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 ;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line">RCC_ADCCLKConfig(RCC_PCLK2_Div6);</span><br><span class="line"></span><br><span class="line">ADC_DeInit(ADC1);</span><br><span class="line"></span><br><span class="line">ADC_InitTypeDef ADC_InitStructure;</span><br><span class="line">ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;</span><br><span class="line">ADC_InitStructure.ADC_ScanConvMode = DISABLE;</span><br><span class="line">ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;</span><br><span class="line">ADC_InitStructure.ADC_ExternalTrigConv =</span><br><span class="line">ADC_ExternalTrigConv_None;</span><br><span class="line">ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;</span><br><span class="line">ADC_InitStructure.ADC_NbrOfChannel = <span class="number">1</span>;</span><br><span class="line">ADC_Init(ADC1, &amp;ADC_InitStructure); </span><br><span class="line"></span><br><span class="line">ADC_Cmd(ADC1,ENABLE);</span><br><span class="line"></span><br><span class="line">ADC_ResetCalibration(ADC1); </span><br><span class="line"><span class="comment">// while(!ADC_GetResetCalibrationStatus(ADC1)); </span></span><br><span class="line">delay_ms(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">ADC_StartCalibration(ADC1); </span><br><span class="line"><span class="comment">//while(!ADC_GetCalibrationStatus(ADC1)); </span></span><br><span class="line">delay_ms(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">ADC_SoftwareStartConvCmd(ADC1,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u16 <span class="title function_">get_ADC1_Val</span><span class="params">(u8 ch)</span>&#123;</span><br><span class="line">ADC_RegularChannelConfig(ADC1, ch, <span class="number">1</span>,ADC_SampleTime_239Cycles5); </span><br><span class="line">ADC_SoftwareStartConvCmd(ADC1,ENABLE);</span><br><span class="line"><span class="comment">//while(!ADC_GetFlagStatus(ADC1,ADC_FLAG_EOC));</span></span><br><span class="line">delay_ms(<span class="number">20</span>);</span><br><span class="line"><span class="keyword">return</span> ADC_GetConversionValue(ADC1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u16 <span class="title function_">get_ADC1_Avg</span><span class="params">(u8 ch,u8 t)</span>&#123;</span><br><span class="line">u16 avg = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; t;i++)&#123;</span><br><span class="line">avg += get_ADC1_Val(ch);</span><br><span class="line">delay_ms(<span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> avg/t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2025/01/16/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2025/01/16/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇文章"><a href="#这是我的第一篇文章" class="headerlink" title="这是我的第一篇文章"></a>这是我的第一篇文章</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
